apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  labels:
    app: flask-app
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: {{ .Values.container.name }}
          image: "{{ .Values.container.image.repository }}:{{ .Values.container.image.image_tag }}"
          ports:
            - containerPort: {{ .Values.container.port }}
          envFrom:
            - configMapRef:
                name: {{ .Values.env.config.name }}
            - configMapRef:
                name: {{ .Values.resource.config.name }}
          resources:
            requests:
              memory: "64Mi"  # Reduced from 128Mi to 64Mi
              cpu: "125m"     # Reduced from 250m to 125m
            limits:
              memory: "128Mi" # Reduced from 256Mi to 128Mi
              cpu: "250m"     # Reduced from 500m to 250m
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          volumeMounts:
            - name: {{ .Values.volumeMounts.name }}
              mountPath: /app/data
      volumes:
        - name: {{ .Values.volumeMounts.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.volume.claim.name }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
  strategy:
    type: {{ .Values.strategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}